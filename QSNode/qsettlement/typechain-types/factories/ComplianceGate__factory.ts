/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  ComplianceGate,
  ComplianceGateInterface,
} from "../ComplianceGate";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_complianceOracle",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AddressBlacklisted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AddressWhitelisted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "code",
        type: "uint256",
      },
    ],
    name: "ComplianceViolation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "DailyLimitSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "TransactionLimitSet",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "blacklistAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "blacklistedAddresses",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "complianceOracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "dailyLimits",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "dailyTransactions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "executeTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getDailySpent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getRemainingDailyLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "meta",
        type: "bytes",
      },
    ],
    name: "preTransferCheck",
    outputs: [
      {
        internalType: "bool",
        name: "allowed",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "code",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "removeFromBlacklist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "removeFromWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
    ],
    name: "setComplianceOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "setDailyLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "setTransactionLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "transactionLimits",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "whitelistAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelistedAddresses",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610bbe380380610bbe83398101604081905261002f91610062565b60008054336001600160a01b031991821617909155600180549091166001600160a01b0392909216919091179055610092565b60006020828403121561007457600080fd5b81516001600160a01b038116811461008b57600080fd5b9392505050565b610b1d806100a16000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80638da5cb5b116100a2578063d777e42511610071578063d777e425146102ab578063d7bffc92146102be578063e58ef8a8146102de578063ec37d259146102f1578063f3290d751461030457600080fd5b80638da5cb5b146102385780639d6e0b381461024b578063a15e30301461025e578063d5749d421461028857600080fd5b806341566585116100e957806341566585146101cc578063537df3b6146101df5780635b8c9337146101f25780637b97f7f7146102055780638ab1d6811461022557600080fd5b806306c933d81461011b57806310fb30d5146101535780632803212f1461018c578063410239bf146101a1575b600080fd5b61013e61012936600461093b565b60026020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b61017e61016136600461095d565b600660209081526000928352604080842090915290825290205481565b60405190815260200161014a565b61019f61019a36600461095d565b610317565b005b6001546101b4906001600160a01b031681565b6040516001600160a01b03909116815260200161014a565b61019f6101da36600461093b565b6103b8565b61019f6101ed36600461093b565b610443565b61017e61020036600461093b565b6104a3565b61017e61021336600461093b565b60056020526000908152604090205481565b61019f61023336600461093b565b6104e0565b6000546101b4906001600160a01b031681565b61019f61025936600461095d565b610540565b61027161026c366004610987565b6105cc565b60408051921515835260208301919091520161014a565b61013e61029636600461093b565b60036020526000908152604090205460ff1681565b61019f6102b936600461093b565b61075c565b61017e6102cc36600461093b565b60046020526000908152604090205481565b61019f6102ec366004610a22565b6107c5565b61017e6102ff36600461093b565b610817565b61019f61031236600461093b565b610894565b6001546001600160a01b031633148061033a57506000546001600160a01b031633145b61035f5760405162461bcd60e51b815260040161035690610a5e565b60405180910390fd5b6001600160a01b03821660008181526004602052604090819020839055517fd3d22ffd28b02735cf411bd7f925bd8da01212c7028153e0d632e2953ac3088e906103ac9084815260200190565b60405180910390a25050565b6001546001600160a01b03163314806103db57506000546001600160a01b031633145b6103f75760405162461bcd60e51b815260040161035690610a5e565b6001600160a01b038116600081815260026020526040808220805460ff19166001179055517f4f783c179409b4127238bc9c990bc99b9a651666a0d20b51d6c42849eb88466d9190a250565b6001546001600160a01b031633148061046657506000546001600160a01b031633145b6104825760405162461bcd60e51b815260040161035690610a5e565b6001600160a01b03166000908152600360205260409020805460ff19169055565b6000806104b36201518042610a99565b6001600160a01b039093166000908152600660209081526040808320958352949052929092205492915050565b6001546001600160a01b031633148061050357506000546001600160a01b031633145b61051f5760405162461bcd60e51b815260040161035690610a5e565b6001600160a01b03166000908152600260205260409020805460ff19169055565b6001546001600160a01b031633148061056357506000546001600160a01b031633145b61057f5760405162461bcd60e51b815260040161035690610a5e565b6001600160a01b03821660008181526005602052604090819020839055517fd467c7faf54b4db198824795620588f5db4812396d339c7499ee2497a4b29769906103ac9084815260200190565b6001600160a01b038516600090815260036020526040812054819060ff168061060d57506001600160a01b03861660009081526003602052604090205460ff165b1561061f5750600090506103e9610752565b6001600160a01b0387166000908152600560205260409020541580159061065d57506001600160a01b03871660009081526005602052604090205485115b1561066f5750600090506103ea610752565b600061067e6201518042610a99565b6001600160a01b0389166000818152600660209081526040808320858452825280832054938352600490915290205491925090158015906106df57506001600160a01b0389166000908152600460205260409020546106dd8883610abb565b115b156106f45760006103eb935093505050610752565b6001600160a01b03891660009081526002602052604090205460ff168061073357506001600160a01b03881660009081526002602052604090205460ff165b156107475760016000935093505050610752565b600160009350935050505b9550959350505050565b6000546001600160a01b031633146107a35760405162461bcd60e51b815260206004820152600a60248201526937b7363c9037bbb732b960b11b6044820152606401610356565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b60006107d46201518042610a99565b6001600160a01b038516600090815260066020908152604080832084845290915281208054929350849290919061080c908490610abb565b909155505050505050565b6000806108276201518042610a99565b6001600160a01b0384166000818152600660209081526040808320858452825280832054938352600490915281205492935090919081900361086f5750600019949350505050565b80821061088157506000949350505050565b61088b8282610ad4565b95945050505050565b6001546001600160a01b03163314806108b757506000546001600160a01b031633145b6108d35760405162461bcd60e51b815260040161035690610a5e565b6001600160a01b038116600081815260036020526040808220805460ff19166001179055517fdaf49ab9345b6cb75bcb5a7f726bff9183c34dcf5c098c385730f9fd893765f69190a250565b80356001600160a01b038116811461093657600080fd5b919050565b60006020828403121561094d57600080fd5b6109568261091f565b9392505050565b6000806040838503121561097057600080fd5b6109798361091f565b946020939093013593505050565b60008060008060006080868803121561099f57600080fd5b6109a88661091f565b94506109b66020870161091f565b935060408601359250606086013567ffffffffffffffff808211156109da57600080fd5b818801915088601f8301126109ee57600080fd5b8135818111156109fd57600080fd5b896020828501011115610a0f57600080fd5b9699959850939650602001949392505050565b600080600060608486031215610a3757600080fd5b610a408461091f565b9250610a4e6020850161091f565b9150604084013590509250925092565b6020808252600b908201526a6f6e6c79206f7261636c6560a81b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600082610ab657634e487b7160e01b600052601260045260246000fd5b500490565b80820180821115610ace57610ace610a83565b92915050565b81810381811115610ace57610ace610a8356fea264697066735822122041bc0f7c89c65b74b0858fb282223cbf0c2dbc64048a502555843059a4c2baa264736f6c63430008140033";

type ComplianceGateConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ComplianceGateConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ComplianceGate__factory extends ContractFactory {
  constructor(...args: ComplianceGateConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _complianceOracle: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_complianceOracle, overrides || {});
  }
  override deploy(
    _complianceOracle: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_complianceOracle, overrides || {}) as Promise<
      ComplianceGate & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ComplianceGate__factory {
    return super.connect(runner) as ComplianceGate__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ComplianceGateInterface {
    return new Interface(_abi) as ComplianceGateInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ComplianceGate {
    return new Contract(address, _abi, runner) as unknown as ComplianceGate;
  }
}

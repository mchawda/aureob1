/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  ReserveRegistry,
  ReserveRegistryInterface,
} from "../ReserveRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newOracle",
        type: "address",
      },
    ],
    name: "OracleUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "currency",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reserves",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "supply",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    name: "ReserveAttested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "currency",
        type: "string",
      },
    ],
    name: "ReserveDeactivated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "currency",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "totalReserves",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenSupply",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "metadata",
        type: "string",
      },
    ],
    name: "attestReserves",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "attestedRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "currency",
        type: "string",
      },
    ],
    name: "deactivateReserve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getActiveCurrencies",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "currency",
        type: "string",
      },
    ],
    name: "getReserveData",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "totalReserves",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastAttestationTime",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "merkleRoot",
            type: "bytes32",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
        ],
        internalType: "struct ReserveRegistry.ReserveData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "currency",
        type: "string",
      },
    ],
    name: "getReserveRatio",
    outputs: [
      {
        internalType: "uint256",
        name: "ratio",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "isAttestedRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "currency",
        type: "string",
      },
    ],
    name: "isReserveHealthy",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "reserves",
    outputs: [
      {
        internalType: "uint256",
        name: "totalReserves",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastAttestationTime",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
      {
        internalType: "string",
        name: "metadata",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
    ],
    name: "setOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "currency",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "totalReserves",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenSupply",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "metadata",
        type: "string",
      },
    ],
    name: "updateReserves",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "currency",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
    ],
    name: "verifyMerkleProof",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516117b73803806117b783398101604081905261002f91610062565b60008054336001600160a01b031991821617909155600180549091166001600160a01b0392909216919091179055610092565b60006020828403121561007457600080fd5b81516001600160a01b038116811461008b57600080fd5b9392505050565b611716806100a16000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80637dc0d1d01161008c578063a683214311610066578063a683214314610211578063aa82656214610224578063e4743ba514610245578063fad71e521461026857600080fd5b80637dc0d1d0146101a05780638da5cb5b146101cb5780638feeb5e6146101de57600080fd5b80635ba0d8a0116100c85780635ba0d8a014610142578063645fa93b146101675780637adbf9731461017a5780637ca9e9db1461018d57600080fd5b806306081003146100ef5780631d3ef8451461010d5780635588275c14610122575b600080fd5b6100f761027b565b6040516101049190611051565b60405180910390f35b61012061011b3660046110fc565b6102b1565b005b610135610130366004611189565b610599565b60405161010491906111cb565b610155610150366004611230565b6106d6565b604051610104969594939291906112e1565b6101206101753660046110fc565b6107a7565b610120610188366004611320565b6109d2565b61012061019b366004611189565b610a63565b6001546101b3906001600160a01b031681565b6040516001600160a01b039091168152602001610104565b6000546101b3906001600160a01b031681565b6102016101ec366004611350565b60036020526000908152604090205460ff1681565b6040519015158152602001610104565b61020161021f366004611369565b610b84565b610237610232366004611189565b610d82565b604051908152602001610104565b610201610253366004611350565b60009081526003602052604090205460ff1690565b610201610276366004611189565b610eb8565b6040805160008082526020820190925260609190816102aa565b60608152602001906001900390816102955790505b5092915050565b6001546001600160a01b03163314806102d457506000546001600160a01b031633145b6102f95760405162461bcd60e51b81526004016102f090611410565b60405180910390fd5b6002878760405161030b929190611435565b9081526040519081900360200190206004015460ff166103625760405162461bcd60e51b815260206004820152601260248201527172657365727665206e6f742061637469766560701b60448201526064016102f0565b600085116103ae5760405162461bcd60e51b81526020600482015260196024820152787265736572766573206d75737420626520706f73697469766560381b60448201526064016102f0565b600084116103f85760405162461bcd60e51b8152602060048201526017602482015276737570706c79206d75737420626520706f73697469766560481b60448201526064016102f0565b60008381526003602052604090205460ff161561044f5760405162461bcd60e51b81526020600482015260156024820152741c9bdbdd08185b1c9958591e48185d1d195cdd1959605a1b60448201526064016102f0565b8460028888604051610462929190611435565b908152604051908190036020018120919091558490600290610487908a908a90611435565b90815260200160405180910390206001018190555042600288886040516104af929190611435565b90815260200160405180910390206002018190555082600288886040516104d7929190611435565b908152602001604051809103902060030181905550818160028989604051610500929190611435565b9081526020016040518091039020600501918261051e9291906114ce565b5060008381526003602052604090819020805460ff19166001179055516105489088908890611435565b6040805191829003822087835260208301879052908201859052907f5fac1b8dda7e1555a5de3ba7a6639afdce1b2a855f0b8ec110108c0c23c9d24b9060600160405180910390a250505050505050565b6105d76040518060c0016040528060008152602001600081526020016000815260200160008019168152602001600015158152602001606081525090565b600283836040516105e9929190611435565b90815260408051918290036020908101832060c0840183528054845260018101549184019190915260028101549183019190915260038101546060830152600481015460ff161515608083015260058101805460a08401919061064b90611445565b80601f016020809104026020016040519081016040528092919081815260200182805461067790611445565b80156106c45780601f10610699576101008083540402835291602001916106c4565b820191906000526020600020905b8154815290600101906020018083116106a757829003601f168201915b50505050508152505090505b92915050565b80516020818301810180516002808352938301929094019190912092905281546001830154918301546003840154600485015460058601805494969394929360ff9092169261072490611445565b80601f016020809104026020016040519081016040528092919081815260200182805461075090611445565b801561079d5780601f106107725761010080835404028352916020019161079d565b820191906000526020600020905b81548152906001019060200180831161078057829003601f168201915b5050505050905086565b6001546001600160a01b03163314806107ca57506000546001600160a01b031633145b6107e65760405162461bcd60e51b81526004016102f090611410565b600085116108325760405162461bcd60e51b81526020600482015260196024820152787265736572766573206d75737420626520706f73697469766560381b60448201526064016102f0565b6000841161087c5760405162461bcd60e51b8152602060048201526017602482015276737570706c79206d75737420626520706f73697469766560481b60448201526064016102f0565b60008381526003602052604090205460ff16156108d35760405162461bcd60e51b81526020600482015260156024820152741c9bdbdd08185b1c9958591e48185d1d195cdd1959605a1b60448201526064016102f0565b6040518060c0016040528086815260200185815260200142815260200184815260200160011515815260200183838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505091525060405160029061094a908a908a90611435565b908152604080516020928190038301902083518155918301516001830155820151600282015560608201516003820155608082015160048201805460ff191691151591909117905560a082015160058201906109a6908261158f565b50505060008381526003602052604090819020805460ff19166001179055516105489088908890611435565b6000546001600160a01b03163314610a195760405162461bcd60e51b815260206004820152600a60248201526937b7363c9037bbb732b960b11b60448201526064016102f0565b600180546001600160a01b0319166001600160a01b0383169081179091556040517f3df77beb5db05fcdd70a30fc8adf3f83f9501b68579455adbd100b818094039490600090a250565b6001546001600160a01b0316331480610a8657506000546001600160a01b031633145b610aa25760405162461bcd60e51b81526004016102f090611410565b60028282604051610ab4929190611435565b9081526040519081900360200190206004015460ff16610b0b5760405162461bcd60e51b815260206004820152601260248201527172657365727665206e6f742061637469766560701b60448201526064016102f0565b600060028383604051610b1f929190611435565b908152604051908190036020018120600401805492151560ff1990931692909217909155610b509083908390611435565b604051908190038120907fb1e326686114353c3cbf1d59fa7ca0622e6b810205b22a88225f9370ab61390c90600090a25050565b60008060028787604051610b99929190611435565b90815260408051918290036020908101832060c0840183528054845260018101549184019190915260028101549183019190915260038101546060830152600481015460ff161515608083015260058101805460a084019190610bfb90611445565b80601f0160208091040260200160405190810160405280929190818152602001828054610c2790611445565b8015610c745780601f10610c4957610100808354040283529160200191610c74565b820191906000526020600020905b815481529060010190602001808311610c5757829003601f168201915b50505050508152505090508060800151610c92576000915050610d79565b8460005b84811015610d6e57858582818110610cb057610cb061164f565b90506020020135821015610d0f5781868683818110610cd157610cd161164f565b90506020020135604051602001610cf2929190918252602082015260400190565b604051602081830303815290604052805190602001209150610d5c565b858582818110610d2157610d2161164f565b9050602002013582604051602001610d43929190918252602082015260400190565b6040516020818303038152906040528051906020012091505b80610d668161167b565b915050610c96565b506060909101511490505b95945050505050565b60008060028484604051610d97929190611435565b90815260408051918290036020908101832060c0840183528054845260018101549184019190915260028101549183019190915260038101546060830152600481015460ff161515608083015260058101805460a084019190610df990611445565b80601f0160208091040260200160405190810160405280929190818152602001828054610e2590611445565b8015610e725780601f10610e4757610100808354040283529160200191610e72565b820191906000526020600020905b815481529060010190602001808311610e5557829003601f168201915b50505050508152505090508060200151600003610e935760009150506106d0565b60208101518151610ea690612710611694565b610eb091906116ab565b949350505050565b60008060028484604051610ecd929190611435565b90815260408051918290036020908101832060c0840183528054845260018101549184019190915260028101549183019190915260038101546060830152600481015460ff161515608083015260058101805460a084019190610f2f90611445565b80601f0160208091040260200160405190810160405280929190818152602001828054610f5b90611445565b8015610fa85780601f10610f7d57610100808354040283529160200191610fa8565b820191906000526020600020905b815481529060010190602001808311610f8b57829003601f168201915b50505050508152505090508060800151610fc65760009150506106d0565b62015180816040015142610fda91906116cd565b1115610fea5760009150506106d0565b6020810151815110156110015760009150506106d0565b5060019392505050565b6000815180845260005b8181101561103157602081850181015186830182015201611015565b506000602082860101526020601f19601f83011685010191505092915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156110a657603f1988860301845261109485835161100b565b94509285019290850190600101611078565b5092979650505050505050565b60008083601f8401126110c557600080fd5b50813567ffffffffffffffff8111156110dd57600080fd5b6020830191508360208285010111156110f557600080fd5b9250929050565b600080600080600080600060a0888a03121561111757600080fd5b873567ffffffffffffffff8082111561112f57600080fd5b61113b8b838c016110b3565b909950975060208a0135965060408a0135955060608a0135945060808a013591508082111561116957600080fd5b506111768a828b016110b3565b989b979a50959850939692959293505050565b6000806020838503121561119c57600080fd5b823567ffffffffffffffff8111156111b357600080fd5b6111bf858286016110b3565b90969095509350505050565b60208152815160208201526020820151604082015260408201516060820152606082015160808201526080820151151560a0820152600060a083015160c080840152610eb060e084018261100b565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561124257600080fd5b813567ffffffffffffffff8082111561125a57600080fd5b818401915084601f83011261126e57600080fd5b8135818111156112805761128061121a565b604051601f8201601f19908116603f011681019083821181831017156112a8576112a861121a565b816040528281528760208487010111156112c157600080fd5b826020860160208301376000928101602001929092525095945050505050565b868152856020820152846040820152836060820152821515608082015260c060a0820152600061131460c083018461100b565b98975050505050505050565b60006020828403121561133257600080fd5b81356001600160a01b038116811461134957600080fd5b9392505050565b60006020828403121561136257600080fd5b5035919050565b60008060008060006060868803121561138157600080fd5b853567ffffffffffffffff8082111561139957600080fd5b6113a589838a016110b3565b90975095506020880135945060408801359150808211156113c557600080fd5b818801915088601f8301126113d957600080fd5b8135818111156113e857600080fd5b8960208260051b85010111156113fd57600080fd5b9699959850939650602001949392505050565b6020808252600b908201526a6f6e6c79206f7261636c6560a81b604082015260600190565b8183823760009101908152919050565b600181811c9082168061145957607f821691505b60208210810361147957634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156114c957600081815260208120601f850160051c810160208610156114a65750805b601f850160051c820191505b818110156114c5578281556001016114b2565b5050505b505050565b67ffffffffffffffff8311156114e6576114e661121a565b6114fa836114f48354611445565b8361147f565b6000601f84116001811461152e57600085156115165750838201355b600019600387901b1c1916600186901b178355611588565b600083815260209020601f19861690835b8281101561155f578685013582556020948501946001909201910161153f565b508682101561157c5760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b815167ffffffffffffffff8111156115a9576115a961121a565b6115bd816115b78454611445565b8461147f565b602080601f8311600181146115f257600084156115da5750858301515b600019600386901b1c1916600185901b1785556114c5565b600085815260208120601f198616915b8281101561162157888601518255948401946001909101908401611602565b508582101561163f5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161168d5761168d611665565b5060010190565b80820281158282048414176106d0576106d0611665565b6000826116c857634e487b7160e01b600052601260045260246000fd5b500490565b818103818111156106d0576106d061166556fea264697066735822122013b19cd7b4454447894efb2c990dacc5c56b0399301e92d515551ecc0374aa0064736f6c63430008140033";

type ReserveRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReserveRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ReserveRegistry__factory extends ContractFactory {
  constructor(...args: ReserveRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _oracle: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_oracle, overrides || {});
  }
  override deploy(
    _oracle: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_oracle, overrides || {}) as Promise<
      ReserveRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ReserveRegistry__factory {
    return super.connect(runner) as ReserveRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReserveRegistryInterface {
    return new Interface(_abi) as ReserveRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ReserveRegistry {
    return new Contract(address, _abi, runner) as unknown as ReserveRegistry;
  }
}
